package components

import "expense-tracker/types"

templ ExpenseDetail(expense types.ExpenseResponse) {
	<div class="flex flex-col md:flex-row justify-center items-center space-x-5 h-full py-5">
		<div class="card bg-base-100 shadow-md p-6 w-full max-w-md">
			<h1 class="text-xl font-bold mb-2">{ expense.Description }</h1>
			<p class="text-4xl font-semibold text-success mb-4">${ expense.Total.String() } { expense.Currency }</p>
			<p class="text-sm text-gray-600">Added by { expense.CreatedByUsername } on { expense.ExpenseTime.Format("Jan 01, 2006") }</p>
			<p class="text-sm text-gray-600 mb-6">Category: { expense.ExpenseType }</p>
			<div class="p-4 rounded-lg">
				<button
					id="toggleDropdown"
					class="flex items-center justify-between w-full font-medium focus:outline-none"
				>
					<span>
						if expense.Ledgers[0].LenderUserId == expense.CurrentUser {
							You paid ${ expense.Total.String() } { expense.Currency }
						} else {
							{ expense.Ledgers[0].LenderUsername } paid ${ expense.Total.String() } { expense.Currency }
						}
					</span>
					<svg id="dropdownIcon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</button>
				<ul id="dropdownList" class="mt-3 hidden border-l-2 border-primary pl-1 space-y-2">
					for _, ledger := range expense.Ledgers {
						<li class="relative text-gray-600 pl-2">
							{ ledger.BorrowerUsername } owes ${ ledger.Share.String() } { expense.Currency }
						</li>
					}
				</ul>
			</div>
			if len(expense.Items) != 0 {
				// TODO: image reconition feature
				<div class="p-4 rounded-lg">
					<button
						id="toggleDropdown"
						class="flex items-center justify-between w-full font-medium focus:outline-none"
					>
						<span>
							Items
						</span>
						<svg id="dropdownIcon" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
						</svg>
					</button>
				</div>
			}
			if expense.InvoicePicUrl != "" {
				// TODO: image reconition feature
				<div class="flex flex-col justify-center items-center py-5 space-y-1">
					<h1 class="text-xl">Invoice Image</h1>
					<button class="btn btn-ghost btn-active">
						View Invoice Image
					</button>
					<div id="indicator" class="htmx-indicator">
						<div class="flex justify-center items-center w-full">
							<span class="loading loading-spinner loading-md"></span>
						</div>
					</div>
				</div>
			}
			<div class="flex justify-between mt-6">
				<button class="flex items-center space-x-2 text-blue-600 hover:text-blue-800">
					<a href={ templ.URL("/expense/" + expense.ID.String() + "/edit") }>
						<span>Edit Expense</span>
					</a>
				</button>
				<button class="flex items-center space-x-2 text-red-600 hover:text-red-800">
					<a href={ templ.URL("/expense/" + expense.ID.String() + "/edit") }>
						<span>Delete Expense</span>
					</a>
				</button>
			</div>
			<script>
				const toggleDropdown = document.getElementById("toggleDropdown");
				const dropdownList = document.getElementById("dropdownList");
				const dropdownIcon = document.getElementById("dropdownIcon");

				toggleDropdown.addEventListener("click", () => {
					dropdownList.classList.toggle("hidden");
					dropdownIcon.classList.toggle("rotate-180");
				});
			</script>
		</div>
	</div>
}
